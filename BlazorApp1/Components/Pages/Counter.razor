@page "/counter/{initialCount:int?}"
@page "/counter2"
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@* <MyButton class="btn btn-success" OnClick="IncrementCount">I INCREMENT</MyButton> *@

<div class="mt-3">
    <input @bind="text" @bind:event="oninput" @bind:after="Search">
    <button @onclick="OnClick">Clear</button>
    <p>@text</p>
    <p>@searchResult</p>
</div>



@* <div class="mt-3">
    <input @oninput="OnInput">
    <p>@text</p>
</div> *@

@* <div style="background-color: lightblue;" @onmouseover="MouseOver" @onmouseout="MouseOut">
    @divText
</div> *@

@* <button class="btn btn-primary" @onclick="() => currentCount++">Click me</button> *@
@* <button class="btn btn-primary" @onclick="IncrementCountAsync">Click me</button> *@
@* <button class="btn btn-primary" @onclick="IncrementCount">Click me</button> *@

@* @if (currentCount > 3){
    <p>HI MOM</p>
} *@

@* <ul>
    @for (int i = 0; i < currentCount; i++){
        <li>Clicked!</li>
    }
</ul> *@

@* <p>InitialCount=@InitialCount</p> *@

@code {
    private int currentCount = 0;

    public string text = "";

    string divText = "mouse out";

    string searchResult = "";

    @* protected override void OnInitialized(){
        currentCount = InitialCount;
    } *@

    @* [Parameter]
    public int IncrementAmount { get; set; } = 1;

    [Parameter]
    public int InitialCount { get; set; } *@

    @* private void IncrementCount()
    {
        currentCount++;
        @* currentCount+=IncrementAmount; *@
    private void IncrementCount(MouseEventArgs e)
    {
        currentCount++;
    }

    @* async Task IncrementCountAsync(){
        await Task.Delay(1000);
        currentCount++;
    } *@
    private void OnInput(ChangeEventArgs e) => text = (string)e.Value!;
    private void MouseOver(MouseEventArgs e) => divText = "Mouse over";
    private void MouseOut(MouseEventArgs e) => divText = " Mouse Out";
    private void OnClick(MouseEventArgs e)
    {
        text="";
    }

    async Task Search(){
        searchResult = "Searching...";
        await Task.Delay(2000);
        searchResult = $"Found {Random.Shared.Next()} results!";
    }
}
